SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
SET default_tablespace = '';
SET default_table_access_method = heap;

CREATE TABLE public.input (
    email text NOT NULL,
    hair_type text NOT NULL,
    scalp_condition text NOT NULL,
    hair_goal text NOT NULL
);

ALTER TABLE public.input OWNER TO neondb_owner;

CREATE TABLE public.quiz_responses (
    id integer NOT NULL,
    email text NOT NULL,
    hair_type text NOT NULL,
    hair_goal text NOT NULL,
    scalp_condition text NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE public.quiz_responses OWNER TO neondb_owner;

CREATE SEQUENCE public.quiz_responses_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER SEQUENCE public.quiz_responses_id_seq OWNER TO neondb_owner;

ALTER SEQUENCE public.quiz_responses_id_seq OWNED BY public.quiz_responses.id;

ALTER TABLE ONLY public.quiz_responses ALTER COLUMN id SET DEFAULT nextval('public.quiz_responses_id_seq'::regclass);

ALTER TABLE ONLY public.input
    ADD CONSTRAINT input_pkey PRIMARY KEY (email);

ALTER TABLE ONLY public.quiz_responses
    ADD CONSTRAINT quiz_responses_pkey PRIMARY KEY (id);

ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO neon_superuser WITH GRANT OPTION;
